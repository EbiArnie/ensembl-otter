REMEMBER
source ~/otterdistprep/setenv.csh

which does:
setenv LONGDIR <LONG_DIRECTORY_NAME>
setenv PATH $LONGDIR/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11R6/bin
setenv BRANCH 16
setenv SUBBRANCH 1
setenv ASSEMBLY 33

Then if you havent done it:
mkdir -p $LONGDIR

You may want to move /usr/local temporarily to stop things from there being used.

You need to recompile tar and install it to stop the LongLink file
truncation. Not sure if this is necessary in linux.

For libiconv
==
 lynx -source 'ftp://gnu.teleglobe.net/ftp.gnu.org/libiconv/libiconv-1.8.tar.gz' > tarfiles/libiconv-1.8.tar.gz
 gzip -dc tarfiles/libiconv-1.8.tar.gz | tar -xvf -
 cd libiconv-1.8
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install


For tar
==
 lynx -source 'ftp://gnu.teleglobe.net/ftp.gnu.org/tar/tar-1.13.tar.gz' > tarfiles/tar-1.13.tar.gz
 gzip -dc tarfiles/tar-1.13.tar.gz | tar -xvf -
 cd tar-1.13
 ./configure --prefix=$LONGDIR
 make
 make install

For cvs
==
 lynx -source 'http://www.cvshome.org/files/19/10/cvs-1.11.5.tar.gz' > tarfiles/cvs-1.11.5.tar.gz
 gzip -dc tarfiles/cvs-1.11.5.tar.gz | tar -xvf -
 cd cvs-1.11.5
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install

For GD
==
 For zlib
 =
  lynx -source 'http://umn.dl.sourceforge.net/libpng/zlib-1.1.4.tar.gz' >tarfiles/zlib-1.1.4.tar.gz
  gzip -dc tarfiles/zlib-1.1.4.tar.gz | tar -xvf -
  cd zlib-1.1.4
  rehash
  ./configure --prefix=$LONGDIR
  make
  make install

 For libpng
 =
  lynx -source 'http://umn.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.5.tar.gz' >tarfiles/libpng-1.2.5.tar.gz
  gzip -dc tarfiles/libpng-1.2.5.tar.gz | tar -xvf -
  cd libpng-1.2.5
  cp scripts/makefile.linux ./Makefile
  sed -e 's|prefix=/usr/local|prefix='$LONGDIR'|' Makefile >junk.jnk
  mv junk.jnk Makefile
  rehash
  make ZLIBINC="/usr/lib" ZLIBLIB="/usr/lib"
  make install
  ranlib $LONGDIR/lib/libpng.a

 
 For jpeg
 =
  lynx -source 'http://www.ijg.org/files/jpegsrc.v6b.tar.gz' > tarfiles/jpegsrc.v6b.tar.gz
  gzip -dc tarfiles/jpegsrc.v6b.tar.gz | tar -xvf -
  cd jpeg-6b
  rehash
  ./configure --prefix=$LONGDIR --enable-shared --enable-static
  mkdir -p $LONGDIR/man/man1
  make
  make install
  make install-lib
  ranlib $LONGDIR/lib/libjpeg.a

 For freetype
 =
  lynx -source 'http://umn.dl.sourceforge.net/sourceforge/freetype/freetype-2.1.4.tar.gz' >tarfiles/freetype-2.1.4.tar.gz
  gzip -dc tarfiles/freetype-2.1.4.tar.gz | tar -xvf -
  cd freetype-2.1.4
  rehash
  ./configure --prefix=$LONGDIR
  make
  make install
  ranlib $LONGDIR/lib/libfreetype.a

EITHER without gif support:
 lynx -source 'http://www.boutell.com/gd/http/gd-2.0.12.tar.gz' > tarfiles/gd-2.0.12.tar.gz
 gzip -dc tarfiles/gd-2.0.12.tar.gz | tar -xvf -
 cd gd-2.0.12
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install
 ranlib $LONGDIR/lib/libgd.a

OR with GIF support (must remove existing libraries first)
 lynx -source 'http://downloads.rhyme.com.au/gd/gd-2.0.12gif.tar.gz' > tarfiles/gd-2.0.12gif.tar.gz
 gzip -dc tarfiles/gd-2.0.12gif.tar.gz | tar -xvf -
 cd gd-2.0.12gif
 rehash
 ./configure --prefix=$LONGDIR --with-libiconv-prefix=$LONGDIR
# Need to fix up libiconv so it can be loaded by perl
 make
 make install
 ranlib $LONGDIR/lib/libgd.a



For expat
==
 lynx -source 'http://umn.dl.sourceforge.net/sourceforge/expat/expat-1.95.6.tar.gz' >tarfiles/expat-1.95.6.tar.gz
 gzip -dc tarfiles/expat-1.95.6.tar.gz | tar -xvf -
 cd expat-1.95.6
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install
 ranlib $LONGDIR/lib/libexpat.a

For gdbm (not sure if this is necessary, but perl seemed to be using gdbm something)
==
 lynx -source 'ftp://gnu.teleglobe.net/ftp.gnu.org/gdbm/gdbm-1.7.3.tar.gz' > tarfiles/gdbm-1.7.3.tar.gz
 gzip -dc tarfiles/gdbm-1.7.3.tar.gz | tar -xvf -
 cd gdbm-1.7.3
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install

For Perl
==
 lynx -source 'http://www.cpan.org/src/stable.tar.gz' > tarfiles/perl58.tar.gz
 gzip -dc tarfiles/perl58.tar.gz | tar -xvf -
 cd perl-5.8.0
 rehash
 rm -f config.sh Policy.sh
 sh ./Configure -de -Dprefix=$LONGDIR -Uinstallusrbinperl \
                -Dlocincpth="$LONGDIR/include" \
                -Dloclibpth="$LONGDIR/lib"
 make
 make install


For mysql
==
 lynx -source 'http://mysql.mirror.anlx.net/Downloads/MySQL-4.0/mysql-4.0.14.tar.gz' > tarfiles/mysql-4.0.14.tar.gz
 gzip -dc tarfiles/mysql-4.0.14.tar.gz | tar -xvf -
 cd mysql-4.0.14
 rehash
 ./configure --prefix=$LONGDIR

 Modify max path lengths in include/my_global.h (FN_REFLEN etc)
#define FN_LEN          512     /* Max file name len */
#define FN_HEADLEN      509     /* Max length of filepart of file name */
#define FN_REFLEN       1024    /* Max length of full path-name */


 Modify get_relative_path code in sql/mysqld.cc to make a temp string to
 hold DEAFULT_MYSQL_HOME:-

static char *get_relative_path(const char *path)
{
  char def_mysql_home[FN_REFLEN];
  strcpy(def_mysql_home,DEFAULT_MYSQL_HOME);

  if (test_if_hard_path(path) &&
      is_prefix(path,def_mysql_home) &&
      strcmp(def_mysql_home,FN_ROOTDIR))
  {
    path+=(uint) strlen(def_mysql_home);
    while (*path == FN_LIBCHAR)
      path++;
  }
  return (char*) path;
}

 
 make
 make install
 rehash
# Remember to check if there's a /etc/my.cnf before doing this
 cd $LONGDIR
 $LONGDIR/bin/mysql_install_db
 $LONGDIR/bin/mysqld_safe &

 $LONGDIR/bin/mysql -u root -e 'grant all privileges on *.* to otteradmin@localhost identified by "otter"'
 $LONGDIR/bin/mysql -u root -e 'grant all privileges on *.* to otteradmin@"%" identified by "otter"'
 $LONGDIR/bin/mysql -u root -e 'grant select on *.* to otterro@localhost'
 $LONGDIR/bin/mysql -u root -e 'grant select on *.* to otterro@"%"'
 $LONGDIR/bin/mysql -u root -e 'flush privileges'

 $LONGDIR/bin/mysqladmin -u root shutdown

Loading help and web user dbs
==
 setenv ENSWEBDB ensembl_web_user_db_${BRANCH}_${SUBBRANCH}
 lynx -source "ftp://ftp.ensembl.org/pub/multi-species-${BRANCH}/data/mysql/multi-species/$ENSWEBDB.tar" > $ENSWEBDB.tar
 tar -xvf $ENSWEBDB.tar
 mv pub/multi-species-${BRANCH}/data/mysql/multi-species/$ENSHELPDB .
 rm -r pub

 $LONGDIR/bin/mysqld_safe &
 $LONGDIR/bin/mysql -u otteradmin -potter -e "create database $ENSWEBDB"
 $LONGDIR/bin/mysql -u otteradmin -potter -D$ENSWEBDB < $ENSWEBDB/$ENSWEBDB.sql

 setenv ENSHELPDB ensembl_help_${BRANCH}_${SUBBRANCH}
 lynx -source "ftp://ftp.ensembl.org/pub/multi-species-${BRANCH}/data/mysql/multi-species/$ENSHELPDB.tar" > $ENSHELPDB.tar
 tar -xvf $ENSHELPDB.tar
 mv pub/multi-species-${BRANCH}/data/mysql/multi-species/$ENSHELPDB .
 rm -r pub

 $LONGDIR/bin/mysql -u otteradmin -potter -e "create database $ENSHELPDB"
 $LONGDIR/bin/mysql -u otteradmin -potter -D$ENSHELPDB < $ENSHELPDB/$ENSHELPDB.sql
 foreach file ($ENSHELPDB/*.txt.table)
  set table=`echo $file:t | sed -e 's/\..*//'`
  echo $file
  $LONGDIR/bin/mysql -u otteradmin -potter -D$ENSHELPDB -e "load data  infile '$PWD/$file' into table $table" 
 end

Perl modules
==
 rehash
 perl -MCPAN -e shell
 install Bundle::CPAN
#Some interactive responses required

 quit
 perl -MCPAN -e shell
# Done by Bundle::CPAN - install Compress::Zlib

 force install Bundle::LWP
#Note force because HeadParser fails
#Some interactive responses required
#REMEMBER - No HEAD alias

 force install DBI
#Had to force because of utf8 problem from perl build

# Already done -  install File::Temp

 install File::PathConvert
 install Storable
 install Parse::RecDescent
 install Spreadsheet::WriteExcel
 install OLE::Storage_Lite
 install Time::HiRes

 force install HTML::Template
# Had to force

 install Mail::Mailer
 install PDF::API2
 install FCGI

#Not with GIF
 install GD
#Not with GIF

#Useful to have path for GD
#/Users/searle/longdir/lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooonnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnggggggggggggggggggggggggggggggggggggggggggggggg/lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooonnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnggggggggggggggggggggggggggggggggggggggggggggggg/long/long/long/lib

For DBD::mysql
==
 $LONGDIR/bin/mysqld_safe &

 perl -MCPAN -e shell
 install DBD::mysql

 $LONGDIR/bin/mysqladmin -u root shutdown


For CGI (want slightly older version)
==
 lynx -source 'http://www.cpan.org/modules/by-authors/id/LDS/CGI.pm-2.89.tar.gz' > tarfiles/CGI.pm-2.89.tar.gz
 gzip -dc tarfiles/CGI.pm-2.89.tar.gz | tar -xvf -
 cd CGI.pm-2.89
 perl Makefile.PL
 make 
 make test
 make install

For Apache
==
 lynx -source 'http://www.cpan.org/authors/id/D/DO/DOUGM/mod_perl-1.27.tar.gz' > tarfiles/mod_perl-1.27.tar.gz
 lynx -source 'http://ftp.plig.net/pub/apache/dist/httpd/apache_1.3.28.tar.gz' > tarfiles/apache_1.3.28.tar.gz
 gzip -dc tarfiles/apache_1.3.28.tar.gz | tar -xvf -
 gzip -dc tarfiles/mod_perl-1.27.tar.gz | tar -xvf -
 rehash
 cd apache_1.3.28
 ./configure --prefix=$LONGDIR --with-layout=Apache
 cd ../mod_perl-1.27
# perl Makefile.PL APACHE_SRC=../apache_1.3.28/src DO_HTTPD=1 USE_APACI=1 \
#       EVERYTHING=1 PREFIX=$LONGDIR
 perl Makefile.PL APACHE_SRC=../apache_1.3.28/src NO_HTTPD=1 USE_APACI=1 \
       PREP_HTTPD=1 EVERYTHING=1 PREFIX=$LONGDIR

NOTE: Interactive response needed here

 make
 make install
 cd ../apache_1.3.28
# ./configure --enable-module=include --activate-module=src/modules/perl/libperl.a \
             --enable-module=perl --prefix=$LONGDIR --with-layout=GNU
#Edit src/modules/perl/perl_config to #!/usr/bin/env perl
setenv perl $LONGDIR/bin/perl
 ./configure \
    --with-layout=Apache \
    --enable-module=include \
    --enable-module=so \
    --activate-module=src/modules/perl/libperl.a \
    --disable-shared=perl \
    --without-execstrip \
    --prefix=$LONGDIR

 make
 make install

 Testing
 =
 Add to $LONGDIR/conf/httpd.conf:-
PerlModule Apache::Status
<Location /perl-status>
  SetHandler  perl-script
  PerlHandler Apache::Status
</Location>

 $LONGDIR/bin/apachectl start
 lynx 'http://localhost:8080/perl-status'
 $LONGDIR/bin/apachectl stop

For apreq
==
 perl -MCPAN -e shell
 install Apache::Request



For Apache::DBI
==
 perl -MCPAN -e shell
 install Apache::DBI


For GD (with GIF)
==
 lynx -source 'http://downloads.rhyme.com.au/gd/GD-2.041gif.tar.gz' > tarfiles/GD-2.041gif.tar.gz
 gzip -dc tarfiles/GD-2.041gif.tar.gz  | tar -xvf -
 cd GD-2.041gif
#Useful to have path
 echo $LONGDIR

 perl Makefile.PL
# Interactive responses required

 make
 make install



For dotter
==
 lynx -source 'ftp://ftp.gtk.org/pub/gtk/v1.2/glib-1.2.10.tar.gz' > tarfiles/glib-1.2.10.tar.gz
 gzip -dc tarfiles/glib-1.2.10.tar.gz | tar -xvf -
 rehash
 cd glib-1.2.10
 ./configure --prefix=$LONGDIR
 make
 make install

 lynx -source 'ftp://ftp.gtk.org/pub/gtk/v1.2/gtk+-1.2.10.tar.gz' > tarfiles/gtk+-1.2.10.tar.gz
 gzip -dc tarfiles/gtk+-1.2.10.tar.gz | tar -xvf -
 cd gtk+-1.2.10
 rehash
 ./configure --prefix=$LONGDIR
 make
 make install

 lynx -source 'ftp://gnu.teleglobe.net/ftp.gnu.org/readline/readline-4.3.tar.gz' > tarfiles/readline-4.3.tar.gz
 gzip -dc tarfiles/readline-4.3.tar.gz | tar -xvf -
 rehash
 cd readline-4.3
 ./configure --prefix=$LONGDIR
 make
 make install

 lynx -source 'ftp://ftp.sanger.ac.uk/pub/acedb/SUPPORTED/ACEDB-source.4_9t.tar.gz' >tarfiles/ACEDB-source.4_9t.tar.gz
 mkdir ACEDB-source.4_9t
 rehash
 cd ACEDB-source.4_9t
 gzip -dc ../tarfiles/ACEDB-source.4_9t.tar.gz | tar -xvf - 
 setenv ACEDB_MACHINE LINUX_4
 chmod +w wmake/*
 cp wmake/LINUX_4_DEF wmake/LINUX_4_DEF.orig
 cp wmake/truemake wmake/truemake.orig
 make dotter
 cp bin.LINUX_4/dotter $LONGDIR/bin


Ensembl
==
 mkdir -p cvsdis/cvs
 cd cvsdis/cvs
 cvs -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl login
password CVSUSER
 cvs -z3 -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl co -r branch-ensembl-$BRANCH ensembl-api
 cvs -z3 -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl co -r branch-ensembl-$BRANCH-$SUBBRANCH ensembl-web
 cvs -z3 -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl co ensembl-otter

Bioperl
==
 cd cvsdis/cvs
 cvs -d :pserver:cvs@cvs.open-bio.org:/home/repository/bioperl login
password cvs
 cvs -z3 -d :pserver:cvs@cvs.open-bio.org:/home/repository/bioperl co -r branch-1-2 bioperl-live

Perl script #! munging in cvs
==
 cd cvsdis/cvs
 find . -name '*' -type f ! -size 0 -exec perl -pe 'if (/^#\!.*perl/) { print; exit(0) } else { exit(1)}' {} \; \
                                    -print \
                                    -exec perl -p -i.bak -e 's/^#\!.*perl/#\!\/usr\/local\/bin\/perl/' {} \;

Conf file munging
==
WARNING: This is likely to change for each release 

 cd cvsdis/cvs/conf
 sed -e 's:/usr/local/ensembl:/usr/local/cvs:' SiteDefs.pm > junk.jnk
 mv junk.jnk SiteDefs.pm
 sed -e 's:80:8080:' SiteDefs.pm > junk.jnk
 mv junk.jnk SiteDefs.pm
 sed -e 's:mysqluser:otteradmin:' SiteDefs.pm > junk.jnk
 mv junk.jnk SiteDefs.pm
 sed -e "s:ensembl_web_user_db:${ENSWEBDB}:" SiteDefs.pm > junk.jnk
 mv junk.jnk SiteDefs.pm
 sed -e "s:ENSEMBL_USERDB_PASS            = '':ENSEMBL_USERDB_PASS='otter':" SiteDefs.pm > junk.jnk
 mv junk.jnk SiteDefs.pm
 
 
 sed -e "s:ensembl_help_11:${ENSHELPDB}:" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini
 sed -e "s:3307:3306:" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini
 sed -e "s:admin-user::" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini
 sed -e "s:secret::" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini
 sed -e "s:readonly-user:anonymous:" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini
 sed -e "s:ENSEMBL_HOST            = localhost:ENSEMBL_HOST            = kaka.sanger.ac.uk:" DEFAULTS.ini > junk.jnk
 mv junk.jnk DEFAULTS.ini


Moveperl
==
 cd cvsdis/cvs/ensembl-otter/c/moveperl
 cc -o moveperl moveperl.c
 cp moveperl $LONGDIR/bin

Copying ensembl and bioperl files to $LONGDIR
==
 rehash
 moveperl -l -a -s /usr/local cvsdis $LONGDIR

Making tmp dirs for website
==
 mkdir $LONGDIR/cvs/tmp
 mkdir $LONGDIR/cvs/img-tmp
 mkdir $LONGDIR/cvs/logs

Adding apollo
==
 mkdir apollodis
 
 Then install apollo from fruitfly into apollodis/Apollo

 Then:
 moveperl -l -a $PWD/apollodis $LONGDIR 

Making a distribution tar
==
rm -f otterdist.0.1.tar.gz otterinstall.tar.gz
tar -cvf otterdist.0.1.tar -C $LONGDIR .
gzip otterdist.0.1.tar
cp $LONGDIR/bin/{moveperl,tar} .
cp $LONGDIR/cvs/ensembl-otter/dist/scripts/installotter .
tar -cvf otterinstall.tar otterdist.0.1.tar.gz moveperl installotter tar
gzip otterinstall.tar



Loading data (after install)
==

bin/mysqld_safe --user=searle \
                --set-variable=max_connections=1500 \
                --set-variable=wait_timeout=267820 \
                --set-variable=net_buffer_length=16M \
                --set-variable=max_allowed_packet=16M \
                --set-variable=key_buffer=128M \
                --set-variable=table_cache=512 \
                --set-variable=sort_buffer=8M \
                --set-variable=record_buffer=2M \
                --set-variable=thread_cache=4 \
                --set-variable=thread_concurrency=4 \
                --set-variable=tmp_table_size=10048576 &

setenv $ENSCOREDB homo_sapiens_core_${BRANCH}_${ASSEMBLY}
# If you're redoing it ~/otterinst/bin/mysql -u otteradmin -potter -e "drop database $ENSCOREDB"
~/otterinst/bin/mysql -u otteradmin -potter -e "create database $ENSCOREDB"
~/otterinst/bin/mysql -u otteradmin -potter -D$ENSCOREDB < $ENSCOREDB/$ENSCOREDB.sql

foreach file ($ENSCOREDB/*.txt.table)
 set table=`echo $file:t | sed -e 's/\..*//'`
 echo $file
 ~/otterinst/bin/mysql -u otteradmin -potter -D$ENSCOREDB -e "load data  infile '$PWD/$file' into table $table" 
end


setenv $ENSMARTDB $ensembl_mart_${BRANCH}_${SUBBRANCH}
# If you're redoing it ~/otterinst/bin/mysql -u otteradmin -potter -e "drop database $ENSMARTDB"
~/otterinst/bin/mysql -u otteradmin -potter -e "create database $ENSMARTDB"
~/otterinst/bin/mysql -u otteradmin -potter -D$ENSMARTDB < $ENSMARTDB/$ENSMARTDB.sql

foreach file ($ENSMARTDB/*.txt.table)
 set table=`echo $file:t | sed -e 's/\..*//'`
 echo $file
 ~/otterinst/bin/mysql -u otteradmin -potter -D$ENSMARTDB -e "load data  infile '$PWD/$file' into table $table" 
end

