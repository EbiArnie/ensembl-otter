#!/usr/bin/env perl

use strict;
use warnings;

use 5.010;

use Carp;

use Bio::EnsEMBL::Registry;

my $species         = 'Human';
my $featureset_name = 'Segmentation:HUVEC';

my $registry = 'Bio::EnsEMBL::Registry';

$registry->load_registry_from_db(
    -host => 'ensembldb.ensembl.org',
    -user => 'anonymous'
);

#my $featureset_adaptor           = $registry->get_adaptor($species, 'funcgen', 'featureset');
#my $segmentation_feature_adaptor = $registry->get_adaptor($species, 'funcgen', 'segmentationfeature');
my $core_slice_adaptor           = $registry->get_adaptor($species, 'core',    'slice');
my $fg_slice_adaptor             = $registry->get_adaptor($species, 'funcgen', 'slice');

say "Slice adaptors ", ($core_slice_adaptor == $fg_slice_adaptor ? "are identical" : "differ"), ", core vs funcgen";

my $slice = $fg_slice_adaptor->fetch_by_region('chromosome',1,54960000,54980000);

my $funcgen_dba = $slice->adaptor->efgdb;
my $featureset_adaptor = $funcgen_dba->get_adaptor('featureset');
my $featureset = $featureset_adaptor->fetch_by_name($featureset_name);
croak "Cannot get featureset for ''" unless $featureset;

my $segmentation_feature_adaptor = $funcgen_dba->get_adaptor('segmentationfeature');
my $seg_features = $segmentation_feature_adaptor->fetch_all_by_Slice_FeatureSets($slice, [$featureset]);
say "Got ", scalar @$seg_features, " features.";

exit;

# EOF
