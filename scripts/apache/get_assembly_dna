#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg

use strict;
use warnings;

use SangerPaths qw{ core bioperl123 ensembl57 otter53 };

use Bio::Otter::ServerScriptSupport;

my $server = Bio::Otter::ServerScriptSupport->new;

my $cs         = $server->param('cs')     || 'chromosome';
my $csver      = $server->param('csver')  || (($cs eq 'chromosome') ? 'Otter' : undef);
my $name       = $server->require_argument('name');
my $type       = $server->require_argument('type');
my $start      = $server->param('start');
my $end        = $server->param('end');
my $strand     = $server->param('strand') || undef;

my $metakey    = $server->param('metakey')   || ''; # defaults to pipeline, but can be '.' or something else

my $sdba  = $server->satellite_dba( $metakey );
my $slice = $server->get_slice($sdba, $cs, $name, $type, $start, $end, $strand, $csver);

my $output_str = $slice->seq . "\n";

my $posn = 0;
foreach my $tile (@{ $slice->project('seqlevel') }) {
    my $tile_slice = $tile->to_Slice;
    my $start = $tile->from_start;
    my $end   = $tile->from_end;
    
    # Is there a gap before this piece?
    if (my $gap = $start - $posn - 1) {
        # Debugging.  Show the char immediately before and after the string of "N".
        # $output_str .= substr($output_str, $posn == 0 ? 0 : $posn - 1, $posn == 0 ? $gap + 1 : $gap + 2) . "\n";
        # Change assembly gaps to dashes.
        substr($output_str, $posn, $gap, '-' x $gap);
    }
    $posn = $end;
    
    # To save copying large strings, we append onto the
    # end of the sequence in the output string.
    $output_str .= join("\t",
        $tile->from_start,
        $tile->from_end,
        $tile_slice->seq_region_name,
        $tile_slice->start,
        $tile_slice->end,
        $tile_slice->strand,
        $tile_slice->seq_region_Slice->length,
        ) . "\n";
}
if (my $gap = $slice->length - $posn) {
    # If the slice ends in a gap, turn to dashes too
    substr($output_str, $posn, $gap, '-' x $gap);
}

$server->send_response($output_str, 1);




__END__

=head1 NAME - get_assembly_dna

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

