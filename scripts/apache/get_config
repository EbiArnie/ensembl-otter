#!/usr/bin/perl -Tw

# Author:        anacode
# Group:         anacode
# Maintainer:    anacode

use strict;
use warnings;

BEGIN { use lib ($ENV{OTTER_PERL_INC} || q{}) =~ m{([^:]+)}g }
use SangerPaths qw{ core bioperl123 ensembl72 otter78 };

use Bio::Otter::Server::Support::Web;
use Bio::Otter::Server::Config;

my %PERMITTED = (
    lace_acedb_tar => { filename => 'lace_acedb.tar.gz', content_type => 'application/x-tar-gzip' },
    loutre_schema  => { filename => 'loutre_schema_sqlite.sql' },
    methods_ace    => { filename => 'methods.ace'      },
    otter_config   => { filename => 'otter_config'     },
    otter_schema   => { filename => 'otter_schema.sql' },
    otter_styles   => { filename => 'otter_styles.ini' },
    ensembl_version => { code => \&_ens_version },
);

sub get_config {
    my ($server) = @_;
    my $key = $server->require_argument('key');

    my $spec = $PERMITTED{$key};
    die "No such config '$key'" unless $spec;

    my $content_type = $spec->{content_type};
    $server->content_type($content_type) if $content_type;

    if ($spec->{filename}) {
        return Bio::Otter::Server::Config->get_file($spec->{filename});
    } elsif ($spec->{code}) {
        return $spec->{code}->();
    } else {
        die "Bad spec '$key'";
    }
}

sub _ens_version {
    require Bio::EnsEMBL::ApiVersion;
    return Bio::EnsEMBL::ApiVersion::software_version()."\n";
}

Bio::Otter::Server::Support::Web->send_response(\&get_config);

__END__

=head1 NAME - get_config

=head1 AUTHOR

Ana Code B<email> anacode@sanger.ac.uk

