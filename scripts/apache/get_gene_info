#!/usr/bin/perl -Tw

use strict;
use warnings;

BEGIN { use lib ($ENV{OTTER_PERL_INC} || q{}) =~ m{([^:]+)}g }
use SangerPaths qw{ core bioperl123 otter81 };
use Bio::Otter::Git qw{ :server_ensembl :match };

use Bio::Otter::Server::Support::Web;

sub get_gene_info {
    my ($server) = @_;

    my $output_string = '';

        my $sql = q{
            SELECT gnu.consortium_id
              , gsid1.stable_id
              , ga2.value as current_name
            FROM (gene_stable_id gsid1
                  , gene_stable_id gsid2
                  , gene g2
                  , gene_attrib ga2)
            LEFT JOIN gene_name_update gnu
              ON gsid1.gene_id = gnu.gene_id
            WHERE gsid1.stable_id = gsid2.stable_id
              AND gsid2.gene_id = g2.gene_id
              AND g2.gene_id = ga2.gene_id
              AND ga2.attrib_type_id = 4
              AND g2.is_current = 1
              AND g2.source = 'havana'
        };

        if (my $id_str = $server->param('idlist')) {
            my @id_list;
            foreach my $sid (split /,/, $id_str) {
                $sid =~ s/[^A-Za-z0-9]//g;
                next unless $sid;
                push(@id_list, $sid);
            }
            my $id_query = join(', ', map { "'$_'" } @id_list);
            $sql .= qq{
                AND gsid1.stable_id in ($id_query)
            };
        }

        $sql .= q{
            ORDER BY g2.gene_id DESC
        };

        my $otter = $server->otter_dba;
        my $sth = $otter->dbc->prepare($sql);
        $sth->execute;

        my %seen_stable;
        while (my ($consortium_id, $stable_id, $current_name) = $sth->fetchrow) {
            next if $seen_stable{$stable_id};
            $output_string .= join("\t", $consortium_id || '', $stable_id, $current_name) . "\n";
            $seen_stable{$stable_id} = 1;
        }

    return $output_string;
}

Bio::Otter::Server::Support::Web->send_response(\&get_gene_info);

__END__

=head1 NAME - get_gene_info

=head1 AUTHOR

Ana Code B<email> anacode@sanger.ac.uk

