#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg

use strict;
use warnings;

use SangerPaths qw{ core bioperl123 ensembl61 otter54 };

use Bio::Otter::ServerScriptSupport;
use Bio::Vega::Transform::XML;

my $server = Bio::Otter::ServerScriptSupport->new;

my $cs      = $server->param('cs')     || 'chromosome';
my $csver   = $server->param('csver')  || (($cs eq 'chromosome') ? 'Otter' : undef);
my $name    = $server->require_argument('name');
my $type    = $server->require_argument('type');
my $start   = $server->require_argument('start');
my $end     = $server->require_argument('end');
my $strand  = $server->param('strand') || undef;
my $trunc   = $server->param('trunc');

warn "Getting slice... [$name | $type] [$start] [$end]\n";

my $odba  = $server->otter_dba();
my $slice = $server->get_slice($odba, $cs, $name, $type, $start, $end, $strand, $csver);

warn "Converting slice to XML...\n";

my $formatter = Bio::Vega::Transform::XML->new;
$formatter->skip_truncated_genes($trunc ? 0 : 1);
$formatter->otter_dba($odba);
$formatter->slice($slice);
$formatter->fetch_data_from_otter_db;
my $xml = $formatter->generate_OtterXML;

warn "Done converting slice to XML. Length of XML = " . length($xml) . "\n";

$server->send_response($xml);

1;

