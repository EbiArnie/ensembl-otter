#!/usr/local/bin/perl -Tw


# Author:        gr5
# Group:         anacode
# Maintainer:    gr5
# Last modified: $Date: 2010-03-26 14:55:33 $
# Id:            $Id: nph-get_accession_types,v 1.34 2010-03-26 14:55:33 gr5 Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-get_accession_types,v $

use strict;
use warnings;

use SangerPaths qw{ core bioperl123 ensembl56 otter53 };
use SangerWeb;
use IO::Socket;

use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Utils::MM;

my $server = Bio::Otter::ServerScriptSupport->new;

my $accs = $server->param('accessions');

my @acc_list = split /,/, $accs;

my $mm = Bio::Otter::Utils::MM->new;

my $types;

eval {
    $types = $mm->get_accession_types(\@acc_list);
};
if ($@) {
    
    # mole and mushroom probably failed, so let's try to parse the pfetch header
    
    # XXX: much of this code nicked from nph-pfetch but rejigged here
    
    my $socket;

    foreach my $ip_addr (qw{ 172.17.62.2 172.17.62.3 }){
        last if $socket = IO::Socket::INET->new(
            PeerAddr    => $ip_addr,
            PeerPort    => 22400,
            Proto       => 'tcp',
            Type        => SOCK_STREAM,
            Timeout     => 10,
        );
    }
    
    die "Connect to pfetch server failed" unless $socket;
    
    # detaint and join the accessions into one string

    my $acc_string;

    for my $acc (@acc_list) {
        $acc =~ s/\s+/ /g;
        $acc =~ s/[^\w\-\.\: ]//g;
        $acc_string .= "$acc ";
        $types->{$acc} = [];
    }
    
    # chuck it down the pipe
    
    print $socket "-F $acc_string\n";
    
    # NB: I assume here that the results come back in the order requested
    
    my $idx = 0;
    
    while (<$socket>) {
        if (/^ID/) {
            my $acc = $acc_list[$idx];
            
            if (/EST/) {
                $types->{$acc} = ['EST', $acc];
            }
            elsif (/mRNA/) {
                $types->{$acc} = ['mRNA', $acc];
            }
            elsif (/other RNA/) {
                $types->{$acc} = ['ncRNA', $acc];
            }
            elsif (/\d+\s+AA/) {
                $types->{$acc} = ['Protein', $acc];
            }
        }
        
        # it seems pfetch marks the next file with the line '//'
        
        if (/^\/\/$/) {
            $idx++;
        }
    }
    
    close $socket;
}

my $response = '';

for my $key (keys %$types) {
    $response .= $key."\t".$types->{$key}->[0]."\t".$types->{$key}->[1]."\n";
}

$server->send_response($response);

1;