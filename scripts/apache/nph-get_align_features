#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2008-06-18 17:08:54 $
# Id:            $Id: nph-get_align_features,v 1.18 2008-06-18 17:08:54 lg4 Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-get_align_features,v $

use strict;
use SangerPaths qw{ core bioperl123 ensembl49 otter50 };

use Bio::Otter::ServerScriptSupport;
use Bio::Otter::DBSQL::SimpleBindingAdaptor;
use Bio::Otter::Lace::ViaText ('&GenerateFeatures');

my $server = Bio::Otter::ServerScriptSupport->new;

my $output_string = '';

eval {
    my $analysis_name = $server->param('analysis') || undef; # which means 'all analyses'
    my $kind          = $server->param('kind');

    my ($method, $enriched_class) = @{ {
        'dafs' => [ 'get_all_DnaAlignFeatures',     'Bio::Otter::DnaDnaAlignFeature' ],
        'pafs' => [ 'get_all_ProteinAlignFeatures', 'Bio::Otter::DnaPepAlignFeature' ],
    }->{$kind} };

    my $afs = $server->fetch_mapped_features('align_feature', $method, [$analysis_name],
        map { defined($server->param($_)) ? $server->param($_) : '' } qw(cs name type start end metakey csver csver_remote)
    );

        # Put the names into the hit_description hash:
    my %hd_hash = ();
    foreach my $af (@$afs) {
        $hd_hash{$af->hseqname()} = '';
    }

        # Fetch the hit descriptions from the pipeline
    my $pdbc = $server->satellite_dba( '' )->dbc();
    my $hd_adaptor = Bio::Otter::DBSQL::SimpleBindingAdaptor->new( $pdbc );
    $hd_adaptor->fetch_into_hash(
        'hit_description',
        'hit_name',
        { qw(
            hit_name _hit_name
            hit_length _hit_length
            hit_description _description
            hit_taxon _taxon_id
            hit_db _db_name
        )},
        'Bio::Otter::HitDescription',
        \%hd_hash,
    );

    foreach my $af (@$afs) {
        if(my $hd = $hd_hash{$af->hseqname()}) {
            bless $af, $enriched_class;
            $af->{'_hit_description'} = $hd;
        }
    }

    $output_string = GenerateFeatures($afs, $analysis_name);
};

if ($@) {
    $server->error_exit($@);
} else {
    $server->send_response($output_string, 1);
}

1;
