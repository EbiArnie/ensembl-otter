#!/usr/local/bin/perl -Tw

# Author:        gr5
# Group:         anacode
# Maintainer:    gr5

use strict;
use warnings;

use SangerPaths qw{ core bioperl123 ensembl56 otter54 };

use Bio::Otter::ServerScriptSupport;
use Bio::Vega::Utils::EnsEMBL2GFF;

use CGI::Carp 'fatalsToBrowser';

use Time::HiRes qw(time);

my $server = Bio::Otter::ServerScriptSupport->new;

my $gff_string = '';

my ($t0, $t1, $t2);

eval {
    my $analyses    = $server->param('analysis');
    my $types       = $server->param('kind');
    my $rebase      = $server->param('rebase');
    my $gff_source  = $server->param('gff_source');
    my $gff_seqname = $server->param('gff_seqname');
 
    $t0 = time();

    my $features = $server->get_requested_features;
   
    $t1 = time();

    if (@$features) {
        my $slice = $features->[0]->slice;
        $gff_string = $slice->to_gff(
            ( $analyses
              ? ( analyses  => [split(/,/, $analyses)] )
              : () ), 
            feature_types   => [map {$_.'s'} split(/,/, $types)],
            include_header  => 1,
            rebase          => $rebase,
            gff_source      => $gff_source,
            gff_seqname     => $gff_seqname,
        );
        
#        for my $f (@$features) {
#            $gff_string .= $f->to_gff;
#        }
    }

    $t2 = time();
};

if ($@) {
	$server->error_exit($@);
}
else {
    $server->send_response($gff_string, 0, 1);
    #$server->send_response("db took: ".($t1-$t0)." gff took: ".($t2-$t1));
}

1;

