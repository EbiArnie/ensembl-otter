#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2007-07-05 16:28:24 $
# Id:            $Id: nph-get_prediction_transcripts,v 1.2 2007-07-05 16:28:24 jgrg Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-get_prediction_transcripts,v $
# $HeadURL$

use strict;
use SangerPaths qw{ otter48 ensembl44 bioperl123 core };

use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');

my $server = Bio::Otter::ServerScriptSupport->new;

my $analysis_name = $server->param('analysis');
my $metakey       = $server->param('metakey') || ''; # defaults to pipeline

my $pts = $server->fetch_mapped_features('prediction_transcript',
            ['get_all_PredictionTranscripts', $analysis_name, 1] );
                    # last_arg=1 means "fetch all exons now"

my @pt_optnames = @{ $OrderOfOptions{PredictionTranscript} };
my @pe_optnames = @{ $OrderOfOptions{PredictionExon} };

my $output_string = '';

foreach my $pt (@$pts) {

        # output a predictioin transcipt line:
    my @pt_optvalues = ('PredictionTranscript');
    for my $opt (@pt_optnames) {
        push @pt_optvalues, $pt->$opt();
    }
    if(!$analysis_name) {
        push @pt_optvalues, $pt->analysis()->logic_name();
    }
    $output_string .= join("\t", @pt_optvalues)."\n";

    my $pt_id = $pt->dbID();

    for my $pe (@{$pt->get_all_Exons}) {
            # output an exon line
        my @pe_optvalues = ('PredictionExon');
        for my $opt (@pe_optnames) {
            push @pe_optvalues, $pe->$opt || 0;
        }
        push @pe_optvalues, $pt_id;

        $output_string .= join("\t", @pe_optvalues)."\n";
    }
}

$server->send_response($output_string, 1);

1;

