#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2007-07-05 16:29:56 $
# Id:            $Id: nph-get_repeat_features,v 1.3 2007-07-05 16:29:56 jgrg Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-get_repeat_features,v $

use strict;
use SangerPaths qw{ otter48 ensembl44 bioperl123 core };

use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');

my $server = Bio::Otter::ServerScriptSupport->new;

my $analysis_name = $server->param('analysis');

my $rfs = $server->fetch_mapped_features('repeat_feature',
            ['get_all_RepeatFeatures', $analysis_name] );

my @rf_optnames = @{ $OrderOfOptions{RepeatFeature} };
my @rc_optnames = @{ $OrderOfOptions{RepeatConsensus} };

my $output_string = '';

    # Stringify only the simple fields:
my %rc_seen = (); # collect the seen repeat consensus ids here
foreach my $rf (@$rfs) {
    my $rc = $rf->repeat_consensus(); # object
    my $rc_id = $rc->dbID();

    if(!exists($rc_seen{$rc_id})) { # a new one

            # output a repeat consensus line
        my @rc_optvalues = ('RepeatConsensus');
        for my $opt (@rc_optnames) {
            push @rc_optvalues, $rc->$opt() || 0;
        }
        $output_string .= join("\t", @rc_optvalues)."\n";

        $rc_seen{$rc_id} = 1;
    }
    
        # output a repeat feature line
    my @rf_optvalues = ('RepeatFeature');
    for my $opt (@rf_optnames) {
        push @rf_optvalues, $rf->$opt();
    }
    push @rf_optvalues, $rc_id;

    if(!$analysis_name) {
        push @rf_optvalues, $rf->analysis()->logic_name();
    }

    $output_string .= join("\t", @rf_optvalues)."\n";
}

$server->send_response($output_string, 1);

1;

