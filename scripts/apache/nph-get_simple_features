#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2007-10-26 11:56:31 $
# Id:            $Id: nph-get_simple_features,v 1.8 2007-10-26 11:56:31 lg4 Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-get_simple_features,v $

use strict;
use SangerPaths qw{ core bioperl123 ensembl46 otter48 };

use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');

my $server = Bio::Otter::ServerScriptSupport->new;
my $output_string = '';

eval {

    my $analysis_name = $server->param('analysis') || undef; # defaults to 'all analyses'
    my $metakey       = $server->param('metakey')  || '';    # defaults to pipeline

    my $sfs = $server->fetch_mapped_features('simple_feature', 'get_all_SimpleFeatures', [$analysis_name],
        map { defined($server->param($_)) ? $server->param($_) : '' } qw(cs name type start end metakey csver csver_remote)
    );

    my @sf_optnames = @{ $OrderOfOptions{SimpleFeature} };


    foreach my $sf (@$sfs) {
            # output a SimpleFeature line
        my @sf_optvalues = ('SimpleFeature');
        for my $opt (@sf_optnames) {
            push @sf_optvalues, $sf->$opt();
        }

        if(!$analysis_name) {
            push @sf_optvalues, $sf->analysis()->logic_name();
        }

        $output_string .= join("\t", @sf_optvalues)."\n";
    }
};

if ($@) {
    $server->error_exit($@);
} else {
    $server->send_response($output_string, 1);
}

1;

