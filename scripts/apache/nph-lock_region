#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2009-02-20 10:50:20 $
# Id:            $Id: nph-lock_region,v 1.17 2009-02-20 10:50:20 jgrg Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-lock_region,v $

use strict;
use warnings;

use SangerPaths qw{ core bioperl123 ensembl51 otter52 };

use Bio::Otter::ServerScriptSupport;
use Bio::Vega::ContigLockBroker;
use Bio::Vega::Transform::XML;

my $server = Bio::Otter::ServerScriptSupport->new;

my $cs      = $server->param('cs')       || 'chromosome';
my $csver   = $server->param('csver')    || (($cs eq 'chromosome') ? 'Otter' : undef);
my $name    = $server->require_argument('name');
my $type    = $server->require_argument('type');
my $start   = $server->require_argument('start');
my $end     = $server->require_argument('end');
my $strand  = $server->param('strand')   || undef;
my $cl_host = $server->param('hostname') || $ENV{REMOTE_ADDR};

my ($xml);
eval {
    my $odba = $server->otter_dba();

    my $cb = Bio::Vega::ContigLockBroker->new;
    $cb->client_hostname($cl_host);

    $server->log("Getting slice [$name] [$start] [$end]");
    my $slice = $server->get_slice($odba, $cs, $name, $type, $start, $end, $strand, $csver);
    my $author_obj = $server->make_Author_obj();

    $server->log('Attempting to lock clones...');
    $cb->lock_clones_by_slice($slice, $author_obj, $odba);
    $xml = Bio::Vega::Transform::XML->generate_OtterXML([$slice], $odba, 0, [], []);
};

if ($@) {
    $server->log("Error getting locks: $@");
    $server->error_exit("Clones locked - exiting [$@]");
} else {
    $server->log('Obtained the locks.');
    $server->send_response($xml);
}


1;

