#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2007-07-05 16:29:56 $
# Id:            $Id: nph-lock_region,v 1.3 2007-07-05 16:29:56 jgrg Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-lock_region,v $

use strict;
use SangerPaths qw{ otter48 ensembl44 bioperl123 core };

use Bio::Otter::ServerScriptSupport;
use Bio::Vega::ContigLockBroker;
use Bio::Otter::CloneLockBroker;
use Bio::Vega::Transform::Otter;
use Bio::Vega::Transform::XML;

my $server = Bio::Otter::ServerScriptSupport->new;

my $cs      = $server->param('cs')       || 'chromosome';
my $csver   = $server->param('csver')    || (($cs eq 'chromosome') ? 'Otter' : undef);
my $name    = $server->require_argument('name');
my $type    = $server->require_argument('type');
my $start   = $server->require_argument('start');
my $end     = $server->require_argument('end');
my $strand  = $server->param('strand')   || undef;
my $cl_host = $server->param('hostname') || $ENV{REMOTE_ADDR};

my ($slice, $odba);
eval {
    $odba = $server->otter_dba();

    my $cb = Bio::Vega::ContigLockBroker->new;
    $cb->client_hostname($cl_host);

    $server->log("Getting slice [$name] [$start] [$end]");
    $slice = $server->get_slice($odba, $cs, $name, $type, $start, $end, $strand, $csver);
    my $author_obj = $server->make_Author_obj();

    $server->log("Attempting to lock clones...");
    $cb->lock_clones_by_slice($slice,$author_obj,$odba);
};
$server->error_exit("Clones locked - exiting [$@]") if $@;

$server->log("Obtained the locks.");

my $xml = Bio::Vega::Transform::XML->generate_OtterXML([$slice],$odba,0, []);
$server->send_response($xml);

1;

