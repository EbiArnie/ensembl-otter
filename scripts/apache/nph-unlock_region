#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2008-02-05 17:35:29 $
# Id:            $Id: nph-unlock_region,v 1.8 2008-02-05 17:35:29 jgrg Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-unlock_region,v $

use strict;
use SangerPaths qw{ core bioperl123 ensembl46 otter49 };

use Bio::Otter::ServerScriptSupport;
use Bio::Vega::ContigLockBroker;
use Bio::Vega::Transform::Otter;


{
  my $server = Bio::Otter::ServerScriptSupport->new;

  my $odba        = $server->otter_dba();
  my $author_obj  = $server->make_Author_obj();
  my $slice;

  # the original string lives here:
  my    $xml_string = $server->require_argument('data');
  eval{
	 my $parser = Bio::Vega::Transform::Otter->new;
	 $parser->parse($xml_string);

        my $cs           = 'chromosome';
        my $segment_name = $parser->get_AssemblyType;
        my $chr_slice    = $parser->get_ChromosomeSlice;
        my $start        = $chr_slice->start;
        my $end          = $chr_slice->end;
        my $strand       = $chr_slice->strand;
        my $cs_version   = $parser->init_CoordSystem_Version;

        $slice = $odba->get_SliceAdaptor()->fetch_by_region(
          $cs, $segment_name, $start, $end, $strand, $cs_version);
	 $server->log("Processed incoming xml file with slice: [$segment_name] [$start] [$end]");
  };
  if ($@) {
	 $server->error_exit("Failed converting XML to otter [$@]");
  }
  $server->log("Checking region is locked...");
  my $cb=Bio::Vega::ContigLockBroker->new;
  eval {
	 $cb->check_locks_exist_by_slice($slice,$author_obj,$odba);
  };
  if ($@) {
	 $server->error_exit("Failed checking locks [$@]");
  }
  $server->log("Done checking region is locked.");
  $server->log("Unlocking clones...");
  eval{
	 $cb->remove_by_slice($slice,$author_obj,$odba);
  };
  if ($@) {
      $server->error_exit("Failed to unlock clones\n $@\n***\n");
  }
  $server->log("Done unlocking clones.");
  $server->send_response("<response>\n</response>\n", 1);

}

1;

