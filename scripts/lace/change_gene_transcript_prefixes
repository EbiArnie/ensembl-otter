#!/usr/bin/env perl

use warnings;


### change_gene_transcript_prefixes

use strict;
use Bio::Otter::Lace::Defaults;
use Bio::Otter::AnnotationBroker;

{
    my $dataset_name = 'mouse';
    my $old_prefix = 'EU:';
    my $new_prefix = 'KO:';
    
    my $usage = sub { exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'       => $usage,
        'dataset=s'     => \$dataset_name,
        'old=s'         => \$old_prefix,
        'new=s'         => \$new_prefix,
        ) or $usage->();
    $usage->() unless $dataset_name;
    
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    
    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    
    my $otter_dba   = $ds->get_cached_DBAdaptor;
    my $gene_aptr   = $otter_dba->get_GeneAdaptor;
    
    my $update_gene_type = $otter_dba->prepare(q{
        UPDATE gene
        SET type = ?
        WHERE gene_id = ?
        });
    my $update_gene_name = $otter_dba->prepare(q{
        UPDATE gene_name
        SET name = ?
        WHERE gene_name_id = ?
        });
    my $update_transcript_name = $otter_dba->prepare(q{
        UPDATE transcript_info
        SET name = ?
        WHERE transcript_info_id = ?
        });
    
    my $get_all_gene_id = $gene_aptr->prepare(qq{
        SELECT gene_id
        FROM gene
        WHERE type like '$old_prefix%'
        });
    $get_all_gene_id->execute;
    
    my $gene_id_list = [];
    while (my ($gid) = $get_all_gene_id->fetchrow) {
        push(@$gene_id_list, $gid);
    }
    
    foreach my $gid (@$gene_id_list) {
        my $gene = $gene_aptr->fetch_by_dbID($gid);
        my $old_type = $gene->type;
        my $new_type = $new_prefix . substr $old_type, length($old_prefix);
        warn "\n$old_type > $new_type\n";
        $update_gene_type->execute($new_type, $gene->dbID);

        my $gn = $gene->gene_info->name;
        my $old_name = $gn->name;
        my $new_name = $new_prefix . substr $old_name, length($old_prefix);
        warn "  $old_name > $new_name\n";
        $update_gene_name->execute($new_name, $gn->dbID);
                
        foreach my $tsct (@{$gene->get_all_Transcripts}) {
            my $info = $tsct->transcript_info;
            my $old_name = $info->name;
            my $new_name = $new_prefix . substr $old_name, length($old_prefix);
            warn "    $old_name > $new_name\n";
            $update_transcript_name->execute($new_name, $info->dbID);
        }
    }
}




__END__

=head1 NAME - change_gene_transcript_prefixes

=head1 AUTHOR

Ana Code B<email> anacode@sanger.ac.uk

