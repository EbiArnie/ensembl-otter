#!/usr/bin/env perl

use warnings;


# Need to point at ensembl head API
use lib '/nfs/team71/analysis/jgrg/work/ensembl-head/modules';
use lib '/nfs/team71/analysis/jgrg/work/ensembl-pipeline-head/modules';

### get_softmasked_seq_for_set

use strict;

use Bio::SeqIO;
use Bio::Otter::Lace::Defaults;
use Bio::Vega::DBSQL::DBAdaptor;

{
    my( $dataset_name, $set_name );

    my $usage = sub { exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'       => $usage,
        'dataset=s'     => \$dataset_name,
        'set|chr=s'     => \$set_name,
        ) or $usage->();
    $usage->() unless $dataset_name and $set_name;
    
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    
    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    
    # SequenceSet contains a list of CloneSequence objects
    # in the assembly.
    my $ss = $ds->get_SequenceSet_by_name($set_name);
    $ds->fetch_all_CloneSequences_for_SequenceSet($ss);
    # $ds->fetch_pipeline_ctg_ids_for_SequenceSet($ss);
    
    my $otter_dba = $ds->get_cached_DBAdaptor;
    my $pipe_dba = Bio::Otter::Lace::SatelliteDB::get_DBAdaptor(
        $otter_dba, 'pipeline_db_head', 'Bio::EnsEMBL::DBSQL::DBAdaptor',
        );
    my $slice_aptr = $pipe_dba->get_SliceAdaptor;
    #my $pipe_dba = Bio::Otter::Lace::PipelineDB::get_pipeline_DBAdaptor($otter_dba);
    #my $ctg_aptr = $pipe_dba->get_RawContigAdaptor;

    my $cs_list = $ss->CloneSequence_list;
    
    
    my $seq_out = Bio::SeqIO->new(
        -fh     => \*STDOUT,
        -format => 'fasta',
        );
    
    my $repeat_mask = ['trf', 'RepeatMasker'];
    my $soft = 1;
    foreach my $cs (@$cs_list) {
        # my $ctg_id = $cs->pipeline_contig_id or die "No pipeline contig ID";
        my $ctg_name = $cs->contig_name();
        my $slice = $slice_aptr->fetch_by_region('contig', $ctg_name);
        my $seq = $slice->get_repeatmasked_seq($repeat_mask, $soft);
        #my $ctg = $ctg_aptr->fetch_by_name($ctg_name)
        #  or die "No such contig '$ctg_name'";
        #my $seq = $ctg->get_repeatmasked_seq($repeat_mask, $soft);
        $seq_out->write_seq($seq);
    }
}




__END__

=head1 NAME - get_softmasked_seq_for_set

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

