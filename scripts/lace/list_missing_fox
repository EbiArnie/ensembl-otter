#!/usr/bin/env perl

use warnings;


### list_missing_fox

use strict;
use Bio::Otter::Lace::Defaults;
use Hum::Submission 'prepare_statement';
use Hum::Fox 'fox_prepare_statement';
use Hum::AnaStatus::Sequence;


{
    my $dataset_name = undef;
    
    my $usage = sub { exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'   => $usage,
        'dataset=s' => \$dataset_name,
        ) or $usage->();
    $usage->() unless $dataset_name;
    
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    my $dba = $ds->get_cached_DBAdaptor;
    my $test_xfer = $dba->prepare(q{
        SELECT c.embl_acc
          , u.clone_id
        FROM clone c
        LEFT JOIN current_clone_info u
          ON c.clone_id = u.clone_id
        WHERE c.embl_acc = ?
          AND c.embl_version = ?
        });
    
    my $test_xfer_exons = $dba->prepare(q{
        SELECT COUNT(DISTINCT(e.exon_id))
        FROM clone c
          , contig g
          , exon e
        WHERE c.clone_id = g.clone_id
          AND g.contig_id = e.contig_id
          AND c.embl_acc = ?
          AND c.embl_version = ?
        });
    
    my $species_name = $ds->species or die "species not set";

    my $list_all_fox_genomic = fox_prepare_statement(q{
        SELECT l.ana_seq_id
          , g.name
          , g.ace_data
        FROM ace_genomic g
          , ace_ana_seq_link_genomic l
        WHERE g.genomic_id = l.genomic_id
          AND g.is_current = 'Y'
        });
    $list_all_fox_genomic->execute;
    
    my $total = 0;
    my $load  = 0;
    my $xfer  = 0;
    my $error = 0;
    while (my ($asid, $name, $ace_data) = $list_all_fox_genomic->fetchrow) {
        eval{
            my $seq = Hum::AnaStatus::Sequence->fetch_old_by_ana_seq_id($asid);
            if (lc($seq->species_name) eq $species_name) {
                $total++;
                my ($acc, $sv) = $seq->get_accession_and_sv;
                $test_xfer->execute($acc, $sv);
                my ($present, $xfered) = $test_xfer->fetchrow;
                unless ($xfered) {
                    $test_xfer_exons->execute($acc, $sv);
                    ($xfered) = $test_xfer_exons->fetchrow;
                }
                $load++ unless $present;
                $xfer++ unless $xfered;
                printf "%12s.%-2d  %-14s  %4s  %4s  %d\n",
                    $acc, $sv, $seq->sequence_name,
                    $present ? 'OK' : 'LOAD',
                    $xfered  ? 'OK' : 'XFER',
                    $asid;
                #print qq{Sequence : "$name"\n$ace_data\n};
            }
        };
        if ($@) {
            print STDERR "ERROR '$name' ($asid) : $@";
            $error++;
        }
    }
    print STDERR "For species '$species_name' of $total total:\n",
        "  $load to load, $xfer to xfer, $error had error\n";
}



__END__

=head1 NAME - list_missing_fox

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

