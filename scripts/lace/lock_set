#!/usr/bin/env perl

use warnings;


### lock_set

use strict;
use Bio::Otter::Lace::Defaults;

{
    my( $dataset, $seqsetname );
    my $unlock_flag = 0;
    my $lock_file = undef;
    my $usage = sub{ exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'dataset=s'     => \$dataset,
        'set=s'         => \$seqsetname,
        'h|help!'       => $usage,
        'unlock!'       => \$unlock_flag,
        'file=s'        => \$lock_file,
        );
    $usage->() unless $dataset and ($seqsetname or $unlock_flag);
    $lock_file ||= "$seqsetname-lock.xml";
    
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    my $ds = $cl->get_DataSet_by_name($dataset);
    my $dsObj    = $cl->get_DataSet_by_name($dataset);

    if ($unlock_flag) {
        local $/ = undef;
        my $lock_xml = <>;
        $cl->unlock_otter_xml($lock_xml, $dataset);
    } else {
        open my $lock, '>', $lock_file or die "Can't write to '$lock_file' : $!";
        my $seqSet   = $dsObj->get_SequenceSet_by_name($seqsetname);
        $dsObj->selected_SequenceSet($seqSet);
        my $csObjs   = $dsObj->fetch_all_CloneSequences_for_selected_SequenceSet();
        # this means they ALL get locked.
        $seqSet->selected_CloneSequences($csObjs);

        my $ctg_list = $seqSet->selected_CloneSequences_as_contig_list;
        my $lock_xml;
        my $n=0;
        foreach my $ctg(@$ctg_list){
            eval{
                $lock_xml .=  $cl->lock_region_for_contig_from_Dataset($ctg, $dsObj);
            };
            if($@){
                $cl->unlock_otter_xml($lock_xml, $dataset) if $lock_xml;
                die $@;
            }
        }
        print $lock $lock_xml;
        close $lock or die "Error writing to '$lock_file' : $!";
        warn "Wrote lock to '$lock_file'\n";
    }
}


__END__

=head1 NAME - lock_set

=head1 SYNOPSIS

  lock_set -dataset <DATASET> -seqset <SEQUENCE SET> > lock.xml
  lock_set -dataset <DATASET> -unlock < lock.xml

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

