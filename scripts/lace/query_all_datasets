#!/usr/bin/env perl

### query_all_datasets

use strict;
use warnings;
use Bio::Otter::Lace::Defaults;

{
    my $sql;
    my $pipe_flag = 0;
    my   $do_flag = 0;
    Bio::Otter::Lace::Defaults::do_getopt(
        'query=s' => \$sql,
        'pipe!'   => \$pipe_flag,
        'do!'     => \$do_flag,
    );
    unless ($sql) {
        $sql = join(' ', <>);
    }
    die "No query" unless $sql;

    print "$sql\n";

    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    foreach my $ds ($cl->get_all_DataSets) {
        printf "Querying dataset %s\n", $ds->name;
        my $otter_dba = $ds->get_cached_DBAdaptor;
        my $query_dba =
          $pipe_flag
          ? Bio::Otter::Lace::PipelineDB::get_pipeline_rw_DBAdaptor($otter_dba)
          : $otter_dba;

        my $row_count;
        if ($do_flag) {
            $row_count = $query_dba->dbc->do($sql);
        }
        else {
            my $sth = $query_dba->dbc->prepare($sql);
            $sth->execute;
            my $head = "\t" . DBI::neat_list($sth->{'NAME'}) . "\n";
            my $data = $sth->fetchall_arrayref;
            $row_count = $sth->rows;
            if ($row_count) {
                print $head;
                foreach my $row (@$data) {
                    print "\t", DBI::neat_list($row), "\n";
                }
            }
        }
        
        printf STDERR "%d row%s\n", $row_count, $row_count == 1 ? '' : 's';
        
        # while (my @row = $sth->fetchrow) {
        #     print join("\t", @row), "\n";
        # }
    }
}

__END__

=head1 NAME - query_all_datasets

=head1 SYNOPSIS

  query_all_datasets [-pipe] [-do] -query "SQL STATEMENT"
  query_all_datasets [-pipe] [-do] < tmp.sql

=head1 PARAMETERS

=over 4

=item B<-pipe>

Query the pipeline databases instead of the (default) loutre databases.

=item B<-do>

For non-SELECT statements, uses the C<DBI $dbh-E<gt>do()> method to run them.

=item B<-query>

The SQL to send to each database. Alternatively it will take SQL from STDIN.

=back

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

