#!/usr/bin/env perl

### remove_genes

use strict;
use warnings;

use Bio::Otter::Lace::Defaults;

{
    my $dsname  = 'human';

    Bio::Otter::Lace::Defaults::do_getopt(
        'dataset=s'     => \$dsname,
    );

    my $dba;
    if (0) {
        $dba = Bio::Vega::DBSQL::DBAdaptor->new(
            -host   => 'otterlive',
            -port   => 3324,
            -user   => 'ottadmin',
            -pass   => '**********',
            -dbname => 'loutre_human',
            );
    } else {
        # Client communicates with otter HTTP server
        my $cl = Bio::Otter::Lace::Defaults::make_Client();

        # DataSet interacts directly with an otter database
        my $ds = $cl->get_DataSet_by_name($dsname);

        $dba = $ds->get_cached_DBAdaptor;
    }
    my $gene_dba = $dba->get_GeneAdaptor;
    my $sth = $dba->dbc->prepare(q{
        SELECT gene_id FROM gene_stable_id WHERE stable_id = ?
        });
    while (<>) {
        foreach my $name (split) {
            if($name=~/^(\d+)$/) { # (deleting genes by their db_ids)
                my $gene_db_id = $1;
                print STDERR "\t\t$gene_db_id\n";
                my $gene = $gene_dba->fetch_by_dbID($gene_db_id);
                $gene_dba->remove($gene);
            } else {               # (deleting genes by their stable_ids)
                $sth->execute($name);
                while (my ($gene_db_id) = $sth->fetchrow) {
                    print STDERR "$name\t$gene_db_id\n";
                    my $gene = $gene_dba->fetch_by_dbID($gene_db_id);
                    $gene_dba->remove($gene);
                }
            }
        }
    }
}



__END__

=head1 NAME - remove_genes

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

