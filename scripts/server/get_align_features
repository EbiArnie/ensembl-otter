#!/usr/local/bin/perl -w

use strict;
use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');
use Bio::Otter::DBSQL::SimpleBindingAdaptor;
use Bio::Otter::HitDescription;

my $server = Bio::Otter::ServerScriptSupport->new('dataset',
    'cs','csver','name','type','start','end','strand',
    'kind','metakey','analysis');

my $analysis = $server->getarg('analysis');
my $kind     = $server->getarg('kind');
my $method = {
    'dafs' => 'get_all_DnaAlignFeatures',
    'pafs' => 'get_all_ProteinAlignFeatures',
}->{$kind};

my $afs = $server->fetch_mapped_features('align_feature',
            [$method, $analysis] );

    # Put the names into the hit_description hash:
my %hd_hash = ();
foreach my $af (@$afs) {
    $hd_hash{$af->hseqname()} = '';
}

    # Fetch the hit descriptions from a pipeline (depending on $running_headcode):
my $sdba = $server->satellite_dba( '' );
my $sdbc = $server->running_headcode() ? $sdba->dbc() : $sdba;
my $hd_adaptor = Bio::Otter::DBSQL::SimpleBindingAdaptor->new( $sdbc );
$hd_adaptor->fetch_into_hash(
    'hit_description',
    'hit_name',
    { qw(
        hit_length _hit_length
        hit_description _description
        hit_taxon _taxon_id
        hit_db _db_name
    )},
    'Bio::Otter::HitDescription',
    \%hd_hash,
);

my @af_optnames = @{ $OrderOfOptions{AlignFeature} };
my @hd_optnames = @{ $OrderOfOptions{HitDescription} };

my $output_string = '';

    # Stringify only the simple fields:
my %hit_seen = (); # collect the seen hit names here
foreach my $af (@$afs) {
    my $hit_name = $af->hseqname();
    my $hd = $hd_hash{$hit_name};
    if($hd) {
        if(!exists($hit_seen{$hit_name})) { # a new one

                # output a HitDescription line
            my @hd_optvalues = ('HitDescription', $hit_name);
            for my $opt (@hd_optnames) {
                push @hd_optvalues, $hd->$opt();
            }
            $output_string .= join("\t", @hd_optvalues)."\n";

            $hit_seen{$hit_name} = 1;
        }
    }
    
        # output an AlignFeature line
    my @af_optvalues = ('AlignFeature');
    for my $opt (@af_optnames) {
        push @af_optvalues, $af->$opt();
    }
    push @af_optvalues, $af->cigar_string();

    push @af_optvalues, $af->analysis()->logic_name();

    $output_string .= join("\t", @af_optvalues)."\n";
}

$server->send_response($output_string, 1);

1;

