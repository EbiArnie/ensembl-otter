#!/usr/local/bin/perl -w


use strict;

use CGI;
use OtterDefs;

use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::Converter;
use Bio::Otter::Author;

$| = 1;

my $q = new CGI;
 
if ($ENV{SERVER_SOFTWARE} =~ /libwww-perl-daemon/) {
  print STDERR "NOTE NOTE NOTE Setting nph to 1\n";
  $q->nph(1);
}


my %params = $q->Vars;

my %defaults = %{$OTTER_SPECIES->{'defaults'}};
my %dbinfo   = %{$OTTER_SPECIES->{$params{'dataset'}}};

my $db;

eval {
    $db = new Bio::Otter::DBSQL::DBAdaptor(-host => $dbinfo{HOST},
                                             -user => $dbinfo{USER},
                                             -pass => $dbinfo{PASS},
                                             -port => $dbinfo{PORT},
                                             -dbname => $dbinfo{DBNAME});
};
if ($@) {
  error_exit($q, "Failed opening database [$@]");
}


if (defined($params{type})) {
  $db->assembly_type($params{type});  
}

my @names = @{$db->get_GeneNameAdaptor->fetch_all};
my @syn   = $db->get_GeneSynonymAdaptor->fetch_all;

foreach my $n (@names) {
  print "Name " . $n->name . "\n";
}
foreach my $n (@syn) {
  print "Synonym " . $n->name . "\n";
}
#End main

sub error_exit {
  my ($q,$reason) = @_;

  print $q->header;

  print "<otter>\n";
  print "  <response>\n";
  print "    ERROR: $reason\n";
  print "  </response>\n";
  print "</otter>\n";

  print STDERR "ERROR: $reason\n";
  
  exit;
}
