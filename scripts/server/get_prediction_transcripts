#!/usr/local/bin/perl5.8.0 -w

my $enshead = $ENV{ENSHEAD}; # is set by the server for any GET request

use strict;
use OtterDefs;
use CGI;
use Bio::Otter::ServerSide (':all');
use Bio::Otter::Lace::PipelineDB;
use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');

$| = 1;

my $cgi = new CGI;
set_nph($cgi);
my %cgi_args = $cgi->Vars;

my $odb = get_DBAdaptor_from_CGI_species($cgi, $OTTER_SPECIES, $enshead);
my ($pdb, $pipeline_slice, $pipe_connparms) = get_pipeline_adaptor_slice_parms($cgi, $odb, $enshead);

my @pt_optnames = @{ $OrderOfOptions{PredictionTranscript} };
my @pe_optnames = @{ $OrderOfOptions{PredictionExon} };

my $analysis = $cgi_args{analysis};
my $pts = $pipeline_slice->get_all_PredictionTranscripts($analysis, 1);
    # last_arg=1 means "fetch all exons now"

print STDERR "Total of ".scalar(@$pts)." $analysis prediction transcripts found\n";

my $output_string = '';

foreach my $pt (@$pts) {

        # output a predictioin transcipt line:
    my @pt_optvalues = ('PredictionTranscript');
    for my $opt (@pt_optnames) {
        push @pt_optvalues, $pt->$opt();
    }
    $output_string .= join("\t", @pt_optvalues)."\n";

    my $pt_id = $pt->dbID();

    for my $pe (@{$pt->get_all_Exons}) {
            # output an exon line
        my @pe_optvalues = ('PredictionExon');
        for my $opt (@pe_optnames) {
            push @pe_optvalues, $pe->$opt();
        }
        push @pe_optvalues, $pt_id;

        $output_string .= join("\t", @pe_optvalues)."\n";
    }
}

send_response($cgi, $output_string, 1);

