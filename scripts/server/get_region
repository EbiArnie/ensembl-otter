#!/usr/local/bin/perl -w

use strict;
use Bio::Otter::ServerScriptSupport;
use Bio::Otter::Converter;
use Bio::Vega::Transform::XML;

my $server = Bio::Otter::ServerScriptSupport->new('dataset',
    'cs', 'csver', 'name', 'type', 'start', 'end', 'strand',
);

my $cs     = $server->getarg('cs')     || 'chromosome';
my $csver  = $server->getarg('csver')  || (($cs eq 'chromosome') ? 'Otter' : undef);
my $name   = $server->require_argument('name');
my $type   = $server->require_argument('type');
my $start  = $server->require_argument('start');
my $end    = $server->require_argument('end');
my $strand = $server->getarg('strand') || undef;

$server->log("Getting slice... [$name | $type] [$start] [$end]");

my $odb   = $server->otter_dba();
my $slice = $server->get_slice($odb, $cs, $name, $type, $start, $end, $strand, $csver);

$server->log("Converting slice to XML...");

my $xml;

if ($odb->isa('Bio::Otter::DBSQL::DBAdaptor')) {
    $xml=Bio::Otter::Converter::slice_to_XML($slice,$odb);
} elsif ($odb->isa('Bio::Vega::DBSQL::DBAdaptor')) {
    my $slices=[];
    push @$slices,$slice;
    my $t=Bio::Vega::Transform::XML->new;
    $xml=$t->generate_OtterXML($slices,$odb,0);
} else {
    $server->log("Require an Otter DB Adaptor and not:$odb");
}

$server->log("Done converting slice to XML. Length of XML = " . length($xml) );

$server->send_response("$xml\n");

1;

