#!/usr/local/bin/perl -w

use strict;
use warnings;
use Bio::Otter::ServerQuery;
use OtterDefs;
use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::Version;
use Bio::Otter::ServerSide (':all');

$| = 1;
my $sq = Bio::Otter::ServerQuery->new('dataset',
    'author', 'email'
);
set_nph($sq);

my $query_fail = 'must be present to get an Access List';
my $dataset = $sq->getarg('dataset')  || error_exit($sq, "'dataset' $query_fail");
my $author  = $sq->getarg('author')   || error_exit($sq, "'author' $query_fail");
my $email   = $sq->getarg('email')    || error_exit($sq, "'email' $query_fail");

my $odb = get_DBAdaptor_from_CGI_species($sq, $OTTER_SPECIES, 0);

my $auth_adapt = $odb->get_AuthorAdaptor();
my ($author_obj, $saved_err);
eval{
    $author_obj = $auth_adapt->fetch_by_name($author);
};
if($@){
    $saved_err  = $@;
    eval{
        $author_obj = $auth_adapt->fetch_by_name($OTTER_GLOBAL_ACCESS_USER);
    };
    if($@){
        error_exit($sq, "Failed to get an author.\n$@") unless $author_obj;
    }
}

my $sth=$odb->prepare(q{
            SELECT ssa.assembly_type
              , ssa.access_type
              , au.author_name
            FROM sequence_set_access ssa
              , author au
            WHERE ssa.author_id = au.author_id
  });
$sth->execute;
my $xml = '';
$xml   .= qq`  <dataset name="$dataset">\n`;
$xml   .= qq`    <accesslist>\n`;
while (my ($set_name, $access, $author) = $sth->fetchrow) {
  $access = ($access eq 'RW') ? 1 : 0;
  $xml   .= qq`    <access>\n`;
  $xml   .= qq`      <author>$author</author>\n`;
  $xml   .= qq`      <sequenceset_name>$set_name</sequenceset_name>\n`;
  $xml   .= qq`      <access_type>$access</access_type>\n`;
  $xml   .= qq`    </access>\n`;
}
$xml   .= qq`    </accesslist>\n`;
$xml .= qq`  </dataset>\n`;
send_response($sq, $xml, 1);

__END__

=head1 NAME - get_sequenceset_accesslist

=head1 DESCRIPTION

return xml for sequence set access list

=head1 AUTHOR

Sindhu K. Pillai B<email> sp1@sanger.ac.uk

