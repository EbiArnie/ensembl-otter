#!/usr/local/bin/perl -w

my $pipehead = $ENV{PIPEHEAD}; # is set by the server for any GET request

use strict;
use OtterDefs;
use Bio::Otter::ServerQuery;
use Bio::Otter::ServerSide (':all');
use Bio::Otter::Lace::PipelineDB;
use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::Lace::ViaText ('%OrderOfOptions');

$| = 1;

my $sq = Bio::Otter::ServerQuery->new('dataset',
    'cs','csver','name','type','start','end','strand',
    'analysis');
set_nph($sq);

my $odba = get_DBAdaptor_from_CGI_species($sq, $OTTER_SPECIES, $pipehead);
my $pdba = odba_to_pdba($sq, $odba, $pipehead);
my $pipeline_slice = get_slice($sq, $pdba, $pipehead);

my @sf_optnames = @{ $OrderOfOptions{SimpleFeature} };

my $analysis = $sq->getarg('analysis');
my $sfs = $pipeline_slice->get_all_SimpleFeatures($analysis);

server_log("Total of ".scalar(@$sfs)." $analysis simple features found");

my $output_string = '';

foreach my $sf (@$sfs) {
        # output a SimpleFeature line
    my @sf_optvalues = ('SimpleFeature');
    for my $opt (@sf_optnames) {
        push @sf_optvalues, $sf->$opt();
    }

    $output_string .= join("\t", @sf_optvalues)."\n";
}

send_response($sq, $output_string, 1);

