#!/usr/local/bin/perl -w
my $pipehead = $ENV{PIPEHEAD}; # is set by the server for any GET/POST request

use OtterDefs;
use strict;

use Bio::Otter::ServerQuery;

use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Vega::ContigLockBroker;
use Bio::Otter::CloneLockBroker;
use Bio::Otter::Converter;
use Bio::Vega::Transform::Otter;
use Bio::Vega::Transform::XML;
use Bio::Otter::ServerSide qw(:all);

$| = 1;

my $sq = Bio::Otter::ServerQuery->new('dataset',
    'name', 'type', 'start', 'end', 'hostname'
);
set_nph($sq);

server_log("************* Locking region ************");

my $odb = get_DBAdaptor_from_CGI_species($sq, $OTTER_SPECIES,$pipehead);
my $author = get_Author_from_CGI($sq,$pipehead);

my $chr     = $sq->getarg('name')      || error_exit($sq, "No chromosome entered");
my $type    = $sq->getarg('type')     || error_exit($sq, "No assembly type entered");
my $start   = $sq->getarg('start')    || error_exit($sq, "No chromosome start coordinate entered");
my $end     = $sq->getarg('end')      || error_exit($sq, "No chromosome end coordinate entered");
my $cl_host = $sq->getarg('hostname') || $ENV{REMOTE_ADDR};
#die "\n\ntype:$type start:$start end:$end chr:$chr\n\n";
####################################################################
my $cb;
if ($pipehead){
  Bio::Vega::ContigLockBroker::client_hostname($cl_host);
}
else {
  $cb=Bio::Otter::CloneLockBroker->new($odb);
$cb->client_hostname($cl_host);
}


server_log("Getting slice [$chr] [$start] [$end]");
my $slice = get_slice($sq, $odb, $pipehead);
use Data::Dumper;
#die Dumper($slice);
#my $slice = $odb->get_SliceAdaptor->fetch_by_chr_start_end($chr,
 #                                        $start,
#                                         $end);

####################################################################
# Now actually do the locking
server_log("Attempting to lock clones...");

eval {
  if ($pipehead){
    Bio::Vega::ContigLockBroker::lock_clones_by_slice($slice,$author,$odb);
  }
  else {
	 $cb->lock_clones_by_slice($slice,$author,$odb);
  }
};
error_exit($sq, "Clones locked - exiting [$@]") if $@;

server_log("Obtained the locks.");

my $xml_string;
if ($pipehead){

  my $slices;
  push @$slices,$slice;
  $xml_string = Bio::Vega::Transform::XML->generate_OtterXML($slices,$odb,0);
  send_response($sq, $xml_string);
}
else {
  my $tp         = $slice->get_tiling_path();
  $xml_string = Bio::Otter::Converter::path_to_XML($chr, $start, $end, $odb->assembly_type(), $tp);
  send_response($sq, $xml_string, 1);
}


####################################################################
