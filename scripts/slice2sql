#!/usr/bin/env perl

use strict;

$| = 1;

use Getopt::Long;

use Bio::Otter::EnsEMBL2SQL::Core;
use Bio::Otter::EnsEMBL2SQL::Compara;
use Bio::Otter::EnsEMBL2SQL::Base;

my $host   = 'ensembldb.ensembl.org';
my $user   = 'anonymous';
my $pass   = '';
my $port   = 3306;

my $core_name    = 'homo_sapiens_core_19_34b';
my $est_name     = 'homo_sapiens_est_19_34b';
my $estgene_name = 'homo_sapiens_estgene_19_34b';
my $disease_name = 'homo_sapiens_disease_19_34b';
my $compara_name = 'ensembl_compara_19_2';
# should include ensembl_go_19_1?

my $species = 'Homo sapiens';
my $type    = 'NCBI34';
my $chr;
my $start;
my $end;
my $all;
my $databases;
my $dir;
my $help;

&GetOptions( 
             'host:s'        => \$host,
             'user:s'        => \$user,
             'pass:s'        => \$pass,
             'port:s'        => \$port,
             'core_name:s'   => \$core_name,
             'est_name:s'    => \$est_name,
             'estgene_name:s'=> \$estgene_name,
             'compara_name:s'=> \$compara_name,
	     'disease_name:s'=> \$disease_name,
             'chr:s'         => \$chr,
             'start:n'       => \$start,
             'end:n'         => \$end,
             'type:s'        => \$type,
	     'dir:s'         => \$dir,
	     'species:s'     => \$species,
	     'all'           => \$all,
	     'databases:s'   => \$databases,
	     'help'          => \$help,
             ) || &usage();

if ($help) {
    &usage;
}

if (!defined($chr)) {
    print "\nNo chromosome input\n";
    &usage;
}

if (!defined($start)) {
    print "\nNo chromosome start input\n";
    &usage;
}

if (!defined($end)) {
    print "\nNo chromosome end input\n";
    &usage;

}

my @dbs;
my %databases;

if (defined($databases)) {
    if ($databases =~ /\:/) {
	my @tmp = split(/:/,$databases);
	push(@dbs,@tmp);
    } else {
	push(@dbs,$databases);
    }
}


foreach my $db (@dbs) {
    $databases{$db} = 1;
}

if (scalar(@dbs) == 0 && $all == 0) {
    print "\nMust define some databases to download or use the -all option for all databases\n\n";
    &usage;
}


if (!defined($dir)) {
    $dir = "/tmp";
}

if (! -e $dir) {
    mkdir $dir;
}

if ($all || $databases{'core'} == 1) {
    my $core2sql = new Bio::Otter::EnsEMBL2SQL::Core(-host   => $host,
						     -user   => $user,
						     -pass   => $pass,
						     -port   => $port,
						     -dbname => $core_name,
						     -chr    => $chr,
						     -start  => $start,
						     -end    => $end,
						     -type   => $type);

    dump_database($core2sql,$dir);
}

if ($all || $databases{'est'} == 1) {
    my $est2sql =  new Bio::Otter::EnsEMBL2SQL::Core(-host   => $host,
						     -user   => $user,
						     -pass   => $pass,
						     -port   => $port,
						     -dbname => $est_name,
						     -chr    => $chr,
						     -start  => $start,
						     -end    => $end,
						     -type   => $type);

    dump_database($est2sql,$dir);
}

if ($all || $databases{'estgene'} == 1) {
    my $estgene2sql =  new Bio::Otter::EnsEMBL2SQL::Core(-host   => $host,
							 -user   => $user,
							 -pass   => $pass,
							 -port   => $port,
							 -dbname => $estgene_name,
							 -chr    => $chr,
							 -start  => $start,
							 -end    => $end,
							 -type   => $type);
    
    dump_database($estgene2sql,$dir);
}

if ($all || $databases{'compara'} == 1) {
    my $compara2sql =  new Bio::Otter::EnsEMBL2SQL::Compara(-host   => $host,
							    -user   => $user,
							    -pass   => $pass,
							    -port   => $port,
							    -dbname => $compara_name,
							    -chr    => $chr,
							    -start  => $start,
							    -end    => $end,
							    -type   => $type,
							    -species => $species);
    
    dump_database($compara2sql,$dir);
}

if ($all || $databases{'disease'} == 1) {
    my $disease2sql = new  Bio::Otter::EnsEMBL2SQL::Base(-host   => $host,
							 -user   => $user,
							 -pass   => $pass,
							 -port   => $port,
							 -dbname => $disease_name,
							 -chr    => $chr,
							 -start  => $start,
							 -end    => $end,
							 -type   => $type);
    
    dump_database($disease2sql,$dir);
}


sub dump_database {
    my ($db,$dir) = @_;


    if (!defined($dir)) {
	$dir = '/tmp/';
    }
    $dir = $dir . "/" if ($dir !~ /\/$/);

    $dir = $dir . $db->dbname . "." . $db->chromosome . "." . $db->start . "-" . $db->end ."." . $db->type;

    if (-e $dir) {
	print "\nDirectory $dir exists. Remove this and rerun script.\n";
	exit(0);
    } else {
	mkdir $dir;
    }

    print "\n\nDumping " . $db->dbname . " chromosome " . $db->chromosome . " " . $db->start . "-" . $db->end . " to directory $dir\n\n";

    my @tables = @{$db->get_tables};

    foreach my $table (@tables) {
	$db->dump_SQL_to_file($dir,$table);
    }
}


sub usage {

print "\nSimple Usage : slice2sql -chr <chrname> -start <chrstart> -end <chrend>  -all|-databases core:estgene\n\n";
print "  -chr     : Name of chromosome to dump\n";
print "  -start   : Start position in chromosome\n";
print "  -end     : End position in chromosome\n";
print "  -all     : Dump all databases (core/est/estgene/compara/disease)\n";
print "  -databases db1:db2:db3  : Dump only the specified databases\n";
print "\n\n";

print "Example : slice2sql -chr 4 -start 1 -end 1000000 -databases core:compara -type NCBI31 -dir /home/michele/sql\n\n";
print "This will dump the default species (human) from 1-1Mb on chromosome 4\nand dump the core and compara databases only.\n\n";
print "The sql will be dumped to /home/michele/sql and the assembly to use is NCBI31\n\n";

print "Additional options\n\n";

print "  -species : Species name (e.g. \"Homo sapiens\" \"Mus musculus\" \"Rattus norvegicus\") (default \"$species\")\n";
print "  -type    : Assembly type or version (default $type)\n";
print "  -dir     : Directory to dump to (default /tmp)\n";

print "\nDatabase location options\n\n";
print "  -host    : Database host (default $host)\n";
print "  -user    : Database user (default $user)\n";
print "  -port    : Database port (default $port)\n";
print "  -pass    : Database password (default $pass)\n";

print "\nDatabase name options\n\n";
print "  -core_name    : Core database name (dna/genes/features/repeats etc) (default $core_name)\n";
print "  -est_name     : Est database name                                   (default $est_name)\n";
print "  -estgene_name : Est gene database name                              (default $estgene_name)\n";
print "  -compara_name : Genome comparison database name                     (default $compara_name)\n";
print "  -disease_name : Disease gene database name                          (default $disease_name)\n";
print "\n\n";

exit(0);
}
