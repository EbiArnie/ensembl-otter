#!/usr/local/bin/perl -w

### encode_seq_view

use strict;
use Bio::Otter::Lace::Defaults;
use MenuCanvasWindow::XaceSeqChooser;

{
    my $encode_region = shift || die "Missing region argument";
    my $encode_ace_dir = '/nfs/disk100/humpub/data/encode_proposed_pseudogenes';
    my $encode_acefile = "$encode_ace_dir/$encode_region.ace";
    push(@ARGV, -misc_acefile => $encode_acefile, '-view');
    Bio::Otter::Lace::Defaults::do_getopt();
    my $dataset_name = 'human';
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    
    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    warn "Got dataset";
    # Look at code used by CanvasWindow::SequenceNotes::SearchedSequenceNotes for clues
    #my $otter_dba = $ds->get_cached_DBAdaptor;
    #my $pipe_dba = Bio::Otter::Lace::PipelineDB::get_pipeline_DBAdaptor($otter_dba);

    my $set_name = "encode-$encode_region";
    my $ss = $ds->get_SequenceSet_by_name($set_name);
    $ds->fetch_all_CloneSequences_for_SequenceSet($ss);
    
    # Select all clones in sequence set
    $ss->selected_CloneSequences($ss->CloneSequence_list);

    ### Create AceDatabase
    my $db = $cl->new_AceDatabase;
    $db->make_database_directory;
    $db->init_AceDatabase($ss);
    $db->error_flag(1);

    ### Attach to XaceSeqChooser
    my $mw = CanvasWindow::MainWindow->new("encode: $encode_region");
    my $xc = MenuCanvasWindow::XaceSeqChooser->new($mw);
    $xc->write_access(0);
    $xc->AceDatabase($db);
    $xc->initialize;
    ### launch xace
    ### Display region containing hit in fMap - see code in ExonCanvas

    

    Tk::MainLoop();
}





__END__

=head1 NAME - encode_seq_view

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

