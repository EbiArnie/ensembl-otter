#!/usr/bin/env perl

use strict;
use warnings;

### otterlace

use CanvasWindow::DataSetChooser;
use EditWindow::Password;
use Bio::Otter::Lace::Defaults;
use Bio::Otter::Git;
use Bio::Otter::Error;
use POSIX ":sys_wait_h";

{
    # Become leader of process group so that "kill -$$" at end works
    setpgrp();

    Bio::Otter::Lace::Defaults::do_getopt();
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    $cl->cleanup_sessions;
    $cl->cleanup_log_dir('otterlace');
    $cl->make_log_file('otterlace');
    # After this, we are writing logfile

    Bio::Otter::Git->dump;

    my $mw = CanvasWindow::MainWindow->new("otter: Species List");

    # Look for zombies every 5 seconds
    $mw->repeat(
        5000,
        sub {
            while ((my $dead_pid = waitpid(-1, WNOHANG)) > 0) {
                warn "Process $dead_pid exited $?\n";
            }
        }
    );

    my $dc = CanvasWindow::DataSetChooser->new($mw);
    $dc->Client($cl);

    my $prompt_sub = sub {
        my ($self) = @_;
        my $user = $self->author;

        my $pass = '';
        my $pass_win = EditWindow::Password->new($mw->Toplevel(-title => 'otter: Enter Password'));
        $pass_win->prompt_string("Enter web password for '$user'");
        $pass_win->passref(\$pass);
        $pass_win->initialise;
        $pass_win->get_password;
        return $pass;
    };
    my $passwarn_sub = sub {
        my ($client, $msg) = @_;
        my $dialog = $mw->DialogBox
          (-title => 'otter: Problem logging in',
           -buttons => ['Ok'],);
        $dialog->add(qw( Label -justify left -text ), $msg)->pack;
        $dialog->Show;
        return;
    };

    $cl->password_prompt($prompt_sub);
    $cl->password_problem($passwarn_sub);

    $cl->get_server_otter_config;

    $dc->draw;

    Tk::MainLoop();

    print STDERR "Exiting\n";

    local $SIG{'TERM'} = 'IGNORE';

    # Sending signal to negative of our PID sends
    # signal to all the processes in our process
    # group, ie: all of the children. This cleans
    # up any stray processes we have launched.
    kill TERM => -$$;

    # NB. we are still here, and so is our logger.  Session recovery
    # may be blocked until we are gone.
}

__END__

=head1 NAME - otterlace

=head1 DESCRIPTION

B<otterlace> is a graphical client for the otter
annotation database that uses a local acedb
database with xace and perl/Tk tools to provide a
gene annotation interface.

=head1 COMMAND LINE

The standard parameters controlled by the
B<Bio::Otter::Lace::Defaults> module can be given
on the command line, but the user will not
usually need to give them.  See its documentation
for details.

=head1 FLAGS

=over 4

=item B<view>

Turns off write access to the database, providing
a safe read-only session.  It is still possible
to edit gene structures, but they will not be
saved to the otter server.

=back

=head1 AUTHOR

Ana Code B<email> anacode@sanger.ac.uk

