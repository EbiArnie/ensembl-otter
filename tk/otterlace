#!/usr/local/bin/perl -w

### otterlace

use strict;
use CanvasWindow::DataSetChooser;
use EditWindow::Password;
use Bio::Otter::Lace::Defaults;
use POSIX ":sys_wait_h";

{
    # Become leader of process group so that "kill -$$" at end works
    setpgrp();
    
    if ($^O eq 'dec_osf') {
        die "\n\n  Sorry, this version of otterlace does not work on Alpha machines\n\n\n";
    }
    
    Bio::Otter::Lace::Defaults::do_getopt() || die $Bio::Otter::Lace::Defaults::GETOPT_ERRSTR . "\n";
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    $cl->cleanup_log_dir('otterlace');
    $cl->make_log_file('otterlace');
    if ($ENV{'PFETCH_SERVER_LIST'} and $ENV{'PFETCH_SERVER_LIST'} =~ /^localhost/) {
        $cl->fork_local_pfetch_server;
    }

    my $pipe_name = Bio::Otter::Lace::Defaults::pipe_name();

    my $mw = CanvasWindow::MainWindow->new("Choose DataSet [$pipe_name]");
    
    # Look for zombies every 5 seconds
    $mw->repeat(5000, sub {
        while ((my $dead_pid = waitpid(-1, WNOHANG)) > 0) {
            warn "Process $dead_pid exited $?\n";
        }
    });

    my $dc = CanvasWindow::DataSetChooser->new($mw);
    $dc->Client($cl);

    my $prompt_sub = sub {
        my $self = shift;
        my $user = $self->author;
        
        my $pass = '';
        my $pass_win = EditWindow::Password->new($mw->Toplevel(-title => 'Enter password'));
        $pass_win->prompt_string("Enter password for '$user'");
        $pass_win->passref(\$pass);
        $pass_win->initialise;
        $pass_win->get_password;
        return $pass;
        };

    $cl->password_prompt($prompt_sub);
    $dc->draw;


    Tk::MainLoop();
    
    print STDERR "Exiting\n";

    local $SIG{'TERM'} = 'IGNORE';
    
    # Sending signal to negative of our PID sends
    # signal to all the processes in our process
    # group, ie: all of the children. This cleans
    # up any stray processes we have launched.
    kill TERM => -$$;
}


__END__

=head1 NAME - otterlace

=head1 DESCRIPTION

B<otterlace> is a graphical client for the otter
annotation database that uses a local acedb
database with xace and perl/Tk tools to provide a
gene annotation interface.

=head1 COMMAND LINE

The standard parameters controlled by the
B<Bio::Otter::Lace::Defaults> module can be given
on the command line, but the user will not
usually need to give them.  See its documentation
for details.

=head1 FLAGS

=over 4

=item B<view>

Turns off write access to the database, providing
a safe read-only session.  It is still possible
to edit gene structures, but they will not be
saved to the otter server.

=back

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk

